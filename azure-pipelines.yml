pool:
  vmImage: 'Ubuntu 16.04'

variables:
  buildConfiguration: 'Release'

steps:
- task: NodeTool@0
  displayName: 'Install and cache required node/npm version.'
  inputs:
    # Should match version in .nvmrc.
    versionSpec: '8.12.0'
- task: CmdLine@2
  displayName: 'Install node_modules.'
  inputs:
    script: cd $(Build.Repository.LocalPath)/Scheduler/Client; npm install;
    # In an ideal world this would be true. However, node writes to stderr on
    # warnings, and warnings are extremely common on node installs. Also, if the
    # install actually fails critically, the next build step will fail as well
    # which will result in a failed build.
    failOnStderr: false
- task: CmdLine@2
  displayName: 'Build the react client with webpack.'
  inputs:
    script: cd $(Build.Repository.LocalPath)/Scheduler/Client; npm run build:prod;
    failOnStderr: true
- task: DotNetCoreCLI@2
  displayName: 'Publish the .NET project.'
  inputs:
    command: publish
    publishWebProjects: True
    arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: True
- task: PublishBuildArtifacts@1
  displayName: 'Publish zipped deployment artifact.'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
